package com.dennytech.wiiivideo.parser;import java.util.ArrayList;import java.util.List;import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import org.jsoup.nodes.Element;import org.jsoup.select.Elements;import com.dennytech.common.util.Log;import com.dennytech.wiiivideo.data.Playlist;import com.dennytech.wiiivideo.data.User;import com.dennytech.wiiivideo.data.Video;public class SearchPlaylistParseHelper implements ParseHelper {		private static final String TAG = "playlist";		private static SearchPlaylistParseHelper instance;	public synchronized static SearchPlaylistParseHelper instance() {		if (instance == null) {			instance = new SearchPlaylistParseHelper();		}		return instance;	}	@Override	public String parse(String scriptName, String source) {		return null;	}	@Override	public List<Playlist> parseByDefault(String source) {		List<Playlist> list = new ArrayList<Playlist>();		try {			Document doc = Jsoup.parse(source);			Elements express = doc.getElementsByClass("sk_result");			if (express != null && express.size() > 0) {				Elements albumbox = express.get(0).getElementsByClass("album_box");				if (albumbox != null && albumbox.size() > 0) {					for (Element element : albumbox) {						Playlist pl = new Playlist();						// title						Element title = element.getElementsByClass("album_tit").get(0);						pl.title = title.getElementsByTag("a").get(0).attr("title");						pl.url =  title.getElementsByTag("a").get(0).attr("href");						// items						Elements items = element.getElementsByClass("album_item");						if (items != null && items.size() > 0) {							List<Video> videos = new ArrayList<Video>();							for (Element item : items) {								Video video = new Video();								Element a = item.getElementsByClass("pic").get(0).getElementsByTag("a").get(0);								video.thumb = a.getElementsByTag("img").get(0).attr("src");								String href = a.attr("href").replace("http://v.youku.com/v_show/id_", "");								video.id = href.substring(0, href.indexOf(".html"));								video.title = a.attr("title");								videos.add(video);							}							pl.videos = videos.toArray(new Video[0]);						}						// album info						Element info = element.getElementsByClass("album_info").get(0);						Element userface = info.getElementsByClass("user_face").get(0);						pl.user = new User();						pl.user.icon = userface.getElementsByTag("img").get(0).attr("src");						String href = userface.attr("href").replace("http://u.youku.com/user_show/id_", "");						pl.user.id = href.substring(0, href.indexOf(".html"));												Element userinfo = info.getElementsByClass("user_info").get(0);						pl.user.name = userinfo.getElementsByClass("name").get(0).getElementsByTag("a").text();						Elements p = userinfo.getElementsByTag("p");						if (p != null && p.size() > 2) {							pl.createTime = p.get(1).text();							pl.updateTime = p.get(2).text();						}						Element num = userinfo.getElementsByClass("num").get(0);						pl.playTimes = num.getElementsByTag("p").get(0).text();						pl.count = num.getElementsByTag("p").get(1).text();												list.add(pl);					}				}			}		} catch (Exception e) {			Log.e(TAG, "playlist parse failed", e);		}				return list;	}	@Override	public void close() {	}}